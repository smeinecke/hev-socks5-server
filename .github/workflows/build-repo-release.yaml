name: Build repository release

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  create:
    tags:
      - 'v*'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build-debs:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        os-version: ["debian:buster", "debian:bullseye", "debian:bookworm", "debian:trixie", "ubuntu:noble", "ubuntu:jammy", "ubuntu:focal"]
        arch: ["amd64", "arm64"]
    steps:
      - name: Split os-version into name and version
        id: split_os_version
        run: |
          OS_NAME=$(echo "${{ matrix.os-version }}" | cut -d':' -f1)
          OS_VERSION=$(echo "${{ matrix.os-version }}" | cut -d':' -f2)

          echo "Operating System Name: $OS_NAME"
          echo "Operating System Version: $OS_VERSION"

          # Set outputs for use in later steps
          echo "::set-output name=os-name::$OS_NAME"
          echo "::set-output name=os-version::$OS_VERSION"
      - uses: actions/checkout@v5
        with:
          submodules: true
      - name: Build Debian packages
        uses: jtdor/build-deb-action@v1.9.0
        env:
          DEB_BUILD_OPTIONS: noautodbgsym
        with:
          docker-image: "${{ matrix.os-version }}"
          host-arch: "${{ matrix.arch }}"
          extra-build-deps: devscripts git dpkg-cross
          before-build-hook: "dch --local ~${{ steps.split_os_version.outputs.os-version }} 'GitHub build for ${{ matrix.os-version }}'"
          buildpackage-opts: --build=binary --no-sign -d
          setup-hook: |
            os_version="${{ matrix.os-version }}"
            flavor=${os_version%%:*}
            arch="${{ matrix.arch }}"
            if [ "$flavor" = "ubuntu" ] && [ "$arch" = "arm64" ]; then
              # check for deb822 source format
              if [ -f /etc/apt/sources.list.d/ubuntu.sources ]; then
                cp /etc/apt/sources.list.d/ubuntu.sources /etc/apt/sources.list.d/ubuntu-arm.sources
                sed -i 's,[a-z]*.ubuntu.com,ports.ubuntu.com,' /etc/apt/sources.list.d/ubuntu-arm.sources
                sed -i 's,/ubuntu/$,/ubuntu-ports/,' /etc/apt/sources.list.d/ubuntu-arm.sources
                sed -i 's/^Components:/Architectures: arm64\nComponents:/' /etc/apt/sources.list.d/ubuntu-arm.sources
                sed -i 's/^Components:/Architectures: amd64\nComponents:/' /etc/apt/sources.list.d/ubuntu.sources
              else
                cp /etc/apt/sources.list /etc/apt/sources.list.d/ubuntu-arm.list
                sed -i 's/^deb /deb [arch=amd64] /' /etc/apt/sources.list
                sed -i 's,[a-z]*.ubuntu.com,ports.ubuntu.com,' /etc/apt/sources.list.d/ubuntu-arm.list
                sed -i 's,/ubuntu/ ,/ubuntu-ports/ ,' /etc/apt/sources.list.d/ubuntu-arm.list
                sed -i 's/^deb /deb [arch=arm64] /' /etc/apt/sources.list.d/ubuntu-arm.list
                cat /etc/apt/sources.list  /etc/apt/sources.list.d/ubuntu-arm.list
              fi
            fi

            if [ "$os_version" = "debian:buster" ]; then
              sed -i 's,deb.debian.org,archive.debian.org,g' /etc/apt/sources.list
            fi

            if [ "$arch" = "arm64" ]; then
              dpkg --add-architecture arm64
              apt-get update
            fi

      - name: Upload deb files
        uses: actions/upload-artifact@v4
        with:
          name: "packages-${{ steps.split_os_version.outputs.os-version }}-${{ matrix.arch }}"
          path: ./debian/artifacts/*

  merge-artefacts:
    name: Merge all deb files to single artifact
    runs-on: ubuntu-latest
    needs: build-debs
    steps:
      - name: debian-packages
        uses: actions/upload-artifact/merge@v4

  add_release:
    name: Add package to release
    needs: merge-artefacts
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v5
        with:
          name: merged-artifacts
      - name: Display structure of downloaded files
        run: ls -R
      - name: Release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: ./*.deb

  add_repo:
    name: Add packages to public debian repository
    runs-on: ubuntu-latest
    permissions:
      contents: write
    needs: merge-artefacts
    steps:
      - uses: actions/download-artifact@v5
        with:
          name: "merged-artifacts"
      - name: Add releases to repo
        uses: smeinecke/apt-repo-action@master
        with:
          github_token: ${{ github.token }}
          repo_supported_arch: |
            amd64
            arm64
          repo_supported_version: |
            buster
            bullseye
            bookworm
            trixie
            noble
            jammy
            focal
          file: |
            *.deb
          version_by_filename: true
          private_key: ${{ secrets.APT_SIGNING_KEY }}
          public_key: ${{ vars.APT_PUBLIC_KEY }}
          key_passphrase: ""
          skip_duplicates: true
